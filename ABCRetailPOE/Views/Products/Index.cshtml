@model List<ABCRetail.Models.ProductEntity>
@{
    ViewData["Title"] = "Products";
}

<div class="container mt-5">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-5 pb-2 border-bottom">
        <h2 class="fw-bold text-gradient"> Our Products </h2>
        <a class="btn btn-success shadow-sm px-4 rounded-pill" href="/Products/Create">
            <i class="bi bi-plus-circle me-1"></i> Add Product
        </a>
    </div>

    <!-- Product Grid -->
    <div class="row g-4">
        @foreach (var p in Model)
        {
            <div class="col-sm-6 col-md-4 col-lg-3">
                <div class="card product-card h-100 border rounded-4 shadow-sm">

                    <!-- Product Image -->
                    @if (!string.IsNullOrEmpty(p.ImageUrl))
                    {
                        <img src="@p.ImageUrl" alt="@p.Name"
                             class="card-img-top img-fluid rounded-top"
                             style="height: 220px; object-fit: cover;" />
                    }
                    else
                    {
                        <img src="/images/no-image.png" alt="No image available"
                             class="card-img-top img-fluid rounded-top"
                             style="height: 220px; object-fit: cover;" />
                    }

                    <!-- Product Details -->
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title fw-bold text-dark">@p.Name</h5>
                        <p class="card-text text-muted small mb-1"><strong>Brand:</strong> @p.Brand</p>
                        <p class="card-text text-muted small mb-1"><strong>Category:</strong> @p.Category</p>

                        <p class="card-text fs-5 fw-bold text-success mb-3">
                            R @p.Price.ToString("N2")
                        </p>

                        <p class="mb-3">
                            <span class="badge @(p.Stock > 0 ? "bg-primary" : "bg-danger") px-3 py-2 rounded-pill">
                                @(p.Stock > 0 ? $"In Stock: {p.Stock}" : "Out of Stock")
                            </span>
                        </p>

                        <!-- Action Buttons -->
                        <div class="mt-auto d-flex justify-content-between">
                            <a class="btn btn-sm btn-outline-primary rounded-pill px-3 shadow-sm"
                               href="/Products/Edit?rowKey=@p.RowKey&partitionKey=@p.PartitionKey">
                                <i class="bi bi-pencil-square"></i> Edit
                            </a>
                            <a class="btn btn-sm btn-outline-danger rounded-pill px-3 shadow-sm"
                               href="/Products/Delete?rowKey=@p.RowKey&partitionKey=@p.PartitionKey"
                               onclick="return confirm('Are you sure you want to delete this product?');">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Styling -->
<style>
    /* Gradient heading */
    .text-gradient {
        background: linear-gradient(90deg, #0d6efd, #20c997);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Product card borders + hover */
    .product-card {
        border: 1px solid #e6e6e6;
        transition: transform 0.25s ease, box-shadow 0.25s ease;
    }

        .product-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 24px rgba(0,0,0,0.12);
            border-color: #0d6efd;
        }

        /* Make images consistent */
        .product-card img {
            border-bottom: 1px solid #eee;
        }

    /* Buttons look clickable */
    .btn {
        transition: all 0.2s ease;
    }

        .btn:hover {
            transform: scale(1.05);
        }
</style>
